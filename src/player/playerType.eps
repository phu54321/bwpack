
/**
 * Get current avoider type
 * @param epd - CUnit epd
 * @return - Unit type. May be 1 or 2
 */
function getCurrentUnitType(epd) {
    // /*0x060*/ u32         shieldPoints;
    if(dwread_epd(epd + (0x60 / 4)) >= 10000) return 2;
    else return 1;
}


/**
 * Apply unit type changes
 * @param player - Unit player
 * @param epd - Unit's cunit address
 */
function applyUnitTypeChange(player, epd) {
    // /*0x115*/ u8          stimTimer;
    const w1, b0, b1 = dwbreak(dwread_epd(epd + (0x114 / 4)))[[1, 2, 3]];
    const stimTimer = b1;
    if(stimTimer >= 1) {
        // Set stim timer to 0
        dwwrite_epd(epd + (0x114 / 4), w1 * 65536 + b0);

        // Toogle unit type
        var shield = dwread_epd(epd + (0x60 / 4));
        if(shield >= 10000) shield -= 10000;
        else shield += 10000;
        dwwrite_epd(epd + (0x60 / 4), shield);

        // Add effect
        SetCurrentPlayer(player);
        PlayWAV("sound\\protoss\\templar\\ptehal01.wav");
    }
}


/**
 * Apply avoider's color based on avoider type
 */
function applyUnitTypeColor(player, epd) {
    const spritePtr = dwread_epd(epd + (0x0C / 4));
    if(!spritePtr) return;
    if(getCurrentUnitType(epd) == 1) bwrite(spritePtr + 0x0A, player);
    else bwrite(spritePtr + 0x0A, 10);
}

